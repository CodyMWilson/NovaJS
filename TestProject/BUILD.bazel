package(default_visibility = ["//visibility:public"])

load("@npm_bazel_typescript//:index.bzl", "ts_library")
#load("@novajs//:mocha_ts_test.bzl", "mocha_ts_test")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
#load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_library", "closure_js_binary")

ts_library(
    name = "main_ts",
    srcs = ["main.ts"],
    deps = [
        "//TestProject/src:testproject",
        "@npm//uuid",
        "@npm//@types/uuid",
    ],
)

# filegroup(
#     name = "main_filegroup",
#     srcs = ["main.ts", "//TestProject/src:testproject_filegroup"]
# )

rollup_bundle(
    name = "testproject_rollup",
    deps = [
        ":main_ts",
#        ":main_filegroup",
#        "//TestProject/src:testproject",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//@rollup/plugin-commonjs",
#        "@npm//@tscc/rollup-plugin-tscc",
        "@npm//rollup-plugin-sourcemaps",
#        "@npm//rollup-plugin-closure-compiler",
#        "@npm//@rollup/plugin-typescript",
#        "@npm//rollup-plugin-node-globals",
#        "@npm//rollup-plugin-node-builtins",
#        "@npm//@rollup/plugin-replace",
    ],
    # srcs = [
    #     "//:tscc.spec.json",
    #     "@npm//pngjs",
    #     "@npm//@types/pngjs",
    # ],
    entry_point = "main.ts",
    config_file = "//:rollup.config.js",
    #output_dir = True,
    sourcemap = "inline",
    format = "cjs",
)

# closure_js_library(
#     name = "src",
#     srcs = [":main"],
#     no_closure_library = True,
#     deps = [
# #        "@closure-compiler//:externs",
#     ]
# )

nodejs_binary(
    name = "testproject_bin",
#    entry_point = ":testproject_rollup",
    entry_point = "testproject_rollup.js",
    data = [":testproject_rollup.js"],
)

