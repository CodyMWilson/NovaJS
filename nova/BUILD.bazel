package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm_bazel_typescript//:index.bzl", "ts_library")


# WARNING: Using directory labels here. That means bazel can't
# detect changes to files within these directories. It only
# detects when the directories change via addition or deletion
# of files. It's necessary because the files in these directories
# have spaces in their names. See the documentation at
# https://docs.bazel.build/versions/master/build-ref.html#label_directory
filegroup(
    name = "nova_data",
    srcs = [
        "Nova_Data",
        "objects",
    ]
)

ts_library(
    name = "server",
    srcs = ["server.ts"],
    deps = [
        "@npm//@types/node",
        "@npm//io-ts",
        "@npm//fp-ts",
        "@npm//pixi.js",
        "@npm//socket.io",
        "@npm//@types/socket.io",
        "@npm//express",
        "@npm//@types/express",
        "//novaparse",
        "//nova/src/common",
        "//nova/src/engine",
        "//nova/src/communication",
        "//nova/src/server",
        "//nova/src/server/parsing",
    ],
)

rollup_bundle(
    name = "server_rollup",
    deps = [
        ":server",
        "@npm//@rollup/plugin-node-resolve",
        "@npm//@rollup/plugin-commonjs",
        "@npm//rollup-plugin-sourcemaps",
        "@npm//@rollup/plugin-json",
    ],
    entry_point = "server.ts",
    config_file = "//:rollup.config.js",
    sourcemap = "inline",
    format = "cjs",
)

nodejs_binary(
    name = "nova",
    entry_point = "server_rollup.js",
    # Any files you want access to MUST be listed here!
    data = [
        ":server_rollup",
        "//nova/settings",
        "//novadatainterface:defaults",
        ":nova_data",
        "//nova/src:static_files",
        "//nova/src:browser_bundle",
    ],
)



