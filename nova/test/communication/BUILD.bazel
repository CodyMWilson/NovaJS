package(default_visibility = ["//visibility:public"])

load("@npm_bazel_jasmine//:index.bzl", "jasmine_node_test")
load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@novajs//:bundlers.bzl", "web_bundle", "node_bundle")
load("@npm_bazel_karma//:index.bzl", "karma_web_test")


jasmine_node_test(
    name = "unit_tests",
    srcs = [":unit_test_sources"],
)

ts_library(
    name = "test_utils_lib",
    srcs = ["test_utils.ts"],
)

ts_library(
    name = "unit_test_sources",
    testonly = True,
    # All tests must end in "_test.ts" or jasmine won't recognize them!
    srcs = [
        "SocketChannelServer_test.ts",
     ],
    deps = [
        ":test_utils_lib",
        "//nova/src/communication:communication_server_lib",
        "//nova/src/communication:communication_lib",
        "@npm//fp-ts",
        "@npm//@types/node",
        "@npm//typescript",
        "@npm//uuid",
        "@npm//@types/uuid",
        "@npm//rxjs",
        "@npm//ws",
        "@npm//@types/ws",
        "@npm//jasmine",
        "@npm//@types/jasmine",
    ]
)

ts_library(
    name = "socket_channel_client_test_lib",
    srcs = [
        "SocketChannelClient_test.ts",
    ],
    deps = [
        "@npm//@types/node",
        "@npm//@types/jasmine",
        #"@npm//jasmine",
        "@npm//fp-ts",
        ":test_utils_lib",
        "//nova/src/communication:communication_client_lib",
        "//nova/src/communication:communication_lib",
        #"@npm//uuid",
        #"@npm//@types/uuid",
        "@npm//rxjs",
    ]
)

web_bundle(
    name = "socket_channel_client_test_bundle",
    deps = [":socket_channel_client_test_lib"],
    entry_point = "SocketChannelClient_test.ts",
)

karma_web_test(
    name = "browser_tests",
    srcs = [
        ":socket_channel_client_test_bundle",
    ],
)



